// <auto-generated />
using System;
using Backend_Task.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend_Task.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231009121025_GenerateAndSeedDatabase")]
    partial class GenerateAndSeedDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Backend_Task.Models.Product", b =>
                {
                    b.Property<string>("ProductCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("DiscountRate")
                        .HasColumnType("float");

                    b.Property<string>("FileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MinQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("ProductCode");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            ProductCode = "P001",
                            Category = "Diary",
                            DiscountRate = 5.0,
                            MinQuantity = 10,
                            Name = "Milk",
                            Price = 10.0
                        },
                        new
                        {
                            ProductCode = "P002",
                            Category = "Poultary",
                            DiscountRate = 10.0,
                            MinQuantity = 20,
                            Name = "Chicken",
                            Price = 20.0
                        },
                        new
                        {
                            ProductCode = "P003",
                            Category = "Vegtables",
                            DiscountRate = 15.0,
                            MinQuantity = 20,
                            Name = "Tomato",
                            Price = 5.0
                        });
                });

            modelBuilder.Entity("Backend_Task.Models.User", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Username");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Username = "marwan",
                            Email = "test@gmail.com",
                            LastLogin = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "Password"
                        },
                        new
                        {
                            Username = "mohamed",
                            Email = "test2@gmail.com",
                            LastLogin = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "Password"
                        },
                        new
                        {
                            Username = "ahmed",
                            Email = "test3@gmail.com",
                            LastLogin = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "Password"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
